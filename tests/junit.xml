<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="346" failures="1" time="28.753">
  <testsuite name="fetchSyncDateRequest" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:20" time="12.411" tests="2">
    <testcase classname="fetchSyncDateRequest success fetch" name="fetchSyncDateRequest success fetch" time="0.007">
    </testcase>
    <testcase classname="fetchSyncDateRequest handle error" name="fetchSyncDateRequest handle error" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="subNav saga" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:20" time="12.58" tests="3">
    <testcase classname="subNav saga getProductTree" name="subNav saga getProductTree" time="0.029">
    </testcase>
    <testcase classname="subNav saga fetchCurrentSidebarData" name="subNav saga fetchCurrentSidebarData" time="0.006">
    </testcase>
    <testcase classname="subNav saga assortmentInit" name="subNav saga assortmentInit" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="space saga" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:20" time="12.755" tests="15">
    <testcase classname="space saga getBlocksTypeComparisonSaga success fetch" name="space saga getBlocksTypeComparisonSaga success fetch" time="0.027">
    </testcase>
    <testcase classname="space saga getBlocksTypeComparisonSaga handle no familyId" name="space saga getBlocksTypeComparisonSaga handle no familyId" time="0.011">
    </testcase>
    <testcase classname="space saga getBlocksTypeComparisonSaga handle error" name="space saga getBlocksTypeComparisonSaga handle error" time="0.005">
    </testcase>
    <testcase classname="space saga getSubFamiliesRepartitionSaga success fetch" name="space saga getSubFamiliesRepartitionSaga success fetch" time="0.003">
    </testcase>
    <testcase classname="space saga getSubFamiliesRepartitionSaga handle no familyId" name="space saga getSubFamiliesRepartitionSaga handle no familyId" time="0.002">
    </testcase>
    <testcase classname="space saga getSubFamiliesRepartitionSaga handle error" name="space saga getSubFamiliesRepartitionSaga handle error" time="0.003">
    </testcase>
    <testcase classname="space saga updateBlocksTypeComparison success fetch" name="space saga updateBlocksTypeComparison success fetch" time="0.001">
    </testcase>
    <testcase classname="space saga updateBlocksTypeComparison handle error" name="space saga updateBlocksTypeComparison handle error" time="0.002">
    </testcase>
    <testcase classname="space saga updateSubfamiliesRepartitionSaga success fetch" name="space saga updateSubfamiliesRepartitionSaga success fetch" time="0.005">
    </testcase>
    <testcase classname="space saga exportStoreDeclaration success fetch" name="space saga exportStoreDeclaration success fetch" time="0.004">
    </testcase>
    <testcase classname="space saga exportStoreDeclaration handle no familyId" name="space saga exportStoreDeclaration handle no familyId" time="0.005">
    </testcase>
    <testcase classname="space saga exportStoreDeclaration handle error" name="space saga exportStoreDeclaration handle error" time="0.005">
    </testcase>
    <testcase classname="space saga resetSpaceToDefaults success fetch" name="space saga resetSpaceToDefaults success fetch" time="0.014">
    </testcase>
    <testcase classname="space saga resetSpaceToDefaults handle no familyId" name="space saga resetSpaceToDefaults handle no familyId" time="0.004">
    </testcase>
    <testcase classname="space saga resetSpaceToDefaults handle error" name="space saga resetSpaceToDefaults handle error" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="products saga" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:20" time="12.929" tests="26">
    <testcase classname="products saga fetchProductsPrecalculatedKPI success fetch" name="products saga fetchProductsPrecalculatedKPI success fetch" time="0.009">
    </testcase>
    <testcase classname="products saga fetchProductsPrecalculatedKPI handle error" name="products saga fetchProductsPrecalculatedKPI handle error" time="0.006">
    </testcase>
    <testcase classname="products saga fetchProductsPrecalculatedAllocation success fetch" name="products saga fetchProductsPrecalculatedAllocation success fetch" time="0.01">
    </testcase>
    <testcase classname="products saga fetchProductsPrecalculatedAllocation handle error" name="products saga fetchProductsPrecalculatedAllocation handle error" time="0.014">
    </testcase>
    <testcase classname="products saga fetchAssortmentCodesList success fetch" name="products saga fetchAssortmentCodesList success fetch" time="0.014">
    </testcase>
    <testcase classname="products saga fetchAssortmentCodesList handle error" name="products saga fetchAssortmentCodesList handle error" time="0.015">
    </testcase>
    <testcase classname="products saga fetchProducts success fetch" name="products saga fetchProducts success fetch" time="0.009">
    </testcase>
    <testcase classname="products saga fetchProducts handle no familyId" name="products saga fetchProducts handle no familyId" time="0.01">
    </testcase>
    <testcase classname="products saga fetchProducts handle error" name="products saga fetchProducts handle error" time="0.009">
    </testcase>
    <testcase classname="products saga fetchProducts clearProductsPagination" name="products saga fetchProducts clearProductsPagination" time="0.001">
    </testcase>
    <testcase classname="products saga fetchProductsFilterOptions success fetch" name="products saga fetchProductsFilterOptions success fetch" time="0.001">
    </testcase>
    <testcase classname="products saga fetchProductsFilterOptions handle error" name="products saga fetchProductsFilterOptions handle error" time="0.005">
    </testcase>
    <testcase classname="products saga updateProductsFilterOptionsSaga update filter" name="products saga updateProductsFilterOptionsSaga update filter" time="0.001">
    </testcase>
    <testcase classname="products saga clearProductsAppliedFiltersSaga should clear filters" name="products saga clearProductsAppliedFiltersSaga should clear filters" time="0.002">
    </testcase>
    <testcase classname="products saga convertTableToXls success convert" name="products saga convertTableToXls success convert" time="0.002">
    </testcase>
    <testcase classname="products saga convertTableToXls handle no familyId" name="products saga convertTableToXls handle no familyId" time="0.003">
    </testcase>
    <testcase classname="products saga convertTableToXls handle error" name="products saga convertTableToXls handle error" time="0.002">
    </testcase>
    <testcase classname="products saga convertTableKPIToXls success convert" name="products saga convertTableKPIToXls success convert" time="0.002">
    </testcase>
    <testcase classname="products saga convertTableKPIToXls handle no familyId" name="products saga convertTableKPIToXls handle no familyId" time="0">
    </testcase>
    <testcase classname="products saga convertTableKPIToXls handle error" name="products saga convertTableKPIToXls handle error" time="0.001">
    </testcase>
    <testcase classname="products saga applyUserDataProductAssortmentCodeSaga success fetch" name="products saga applyUserDataProductAssortmentCodeSaga success fetch" time="0.002">
    </testcase>
    <testcase classname="products saga applyUserDataProductAssortmentCodeSaga handle error" name="products saga applyUserDataProductAssortmentCodeSaga handle error" time="0.001">
    </testcase>
    <testcase classname="products saga fetchUserDataProductAssortmentCodesRequest success fetch" name="products saga fetchUserDataProductAssortmentCodesRequest success fetch" time="0.002">
    </testcase>
    <testcase classname="products saga fetchUserDataProductAssortmentCodesRequest handle error" name="products saga fetchUserDataProductAssortmentCodesRequest handle error" time="0.008">
    </testcase>
    <testcase classname="products saga resetUserData success fetch" name="products saga resetUserData success fetch" time="0.001">
    </testcase>
    <testcase classname="products saga resetUserData handle error" name="products saga resetUserData handle error" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="stores saga" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:20" time="13.097" tests="16">
    <testcase classname="stores saga getStores success fetch" name="stores saga getStores success fetch" time="0.018">
    </testcase>
    <testcase classname="stores saga getStores no familyId" name="stores saga getStores no familyId" time="0.003">
    </testcase>
    <testcase classname="stores saga getStores error fetch" name="stores saga getStores error fetch" time="0.007">
    </testcase>
    <testcase classname="stores saga getStores clearProductsPagination" name="stores saga getStores clearProductsPagination" time="0.003">
    </testcase>
    <testcase classname="stores saga getStoreMatrix success fetch" name="stores saga getStoreMatrix success fetch" time="0.002">
    </testcase>
    <testcase classname="stores saga getStoreMatrix no familyId and storeId" name="stores saga getStoreMatrix no familyId and storeId" time="0.001">
    </testcase>
    <testcase classname="stores saga getStoreMatrix error fetch" name="stores saga getStoreMatrix error fetch" time="0.003">
    </testcase>
    <testcase classname="stores saga fetchStoresFilterOptionsRequestSaga success fetch" name="stores saga fetchStoresFilterOptionsRequestSaga success fetch" time="0.002">
    </testcase>
    <testcase classname="stores saga fetchStoresFilterOptionsRequestSaga error fetch" name="stores saga fetchStoresFilterOptionsRequestSaga error fetch" time="0.004">
    </testcase>
    <testcase classname="stores saga updateStoresFilterOptionsSaga" name="stores saga updateStoresFilterOptionsSaga" time="0">
    </testcase>
    <testcase classname="stores saga clearStoresAppliedFiltersSaga clear stores filters" name="stores saga clearStoresAppliedFiltersSaga clear stores filters" time="0.001">
    </testcase>
    <testcase classname="stores saga clearStoresAppliedFiltersSaga no filters to clear" name="stores saga clearStoresAppliedFiltersSaga no filters to clear" time="0.001">
    </testcase>
    <testcase classname="stores saga updateUserDataStoreMatrix matates store matrix user data" name="stores saga updateUserDataStoreMatrix matates store matrix user data" time="0.001">
    </testcase>
    <testcase classname="stores saga updateUserDataStoreMatrix error when matates store matrix user data" name="stores saga updateUserDataStoreMatrix error when matates store matrix user data" time="0.002">
    </testcase>
    <testcase classname="stores saga resetUserData matates store matrix user data" name="stores saga resetUserData matates store matrix user data" time="0.29">
    </testcase>
    <testcase classname="stores saga onExportProductsUserDataToXls success fetch" name="stores saga onExportProductsUserDataToXls success fetch" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:20" time="13.462" tests="1">
    <testcase classname=" renders without crashing" name=" renders without crashing" time="0.269">
    </testcase>
  </testsuite>
  <testsuite name="Analyses Saga Test" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:33" time="3.51" tests="1">
    <testcase classname="Analyses Saga Test handles fetchCampaigns" name="Analyses Saga Test handles fetchCampaigns" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:34" time="3.23" tests="1">
    <testcase classname=" renders without crashing" name=" renders without crashing" time="0.298">
    </testcase>
  </testsuite>
  <testsuite name="Auth saga" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:33" time="3.726" tests="3">
    <testcase classname="Auth saga fetchUserClaims executes successfuly" name="Auth saga fetchUserClaims executes successfuly" time="0.005">
    </testcase>
    <testcase classname="Auth saga fetchUserClaims handles errors" name="Auth saga fetchUserClaims handles errors" time="0.029">
    </testcase>
    <testcase classname="Auth saga doLogout" name="Auth saga doLogout" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="createEditRule selectors" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:34" time="3.02" tests="16">
    <testcase classname="createEditRule selectors should return create edit state" name="createEditRule selectors should return create edit state" time="0.001">
    </testcase>
    <testcase classname="createEditRule selectors should select &quot;influence&quot;" name="createEditRule selectors should select &quot;influence&quot;" time="0.001">
    </testcase>
    <testcase classname="createEditRule selectors should select &quot;influence attributes&quot;" name="createEditRule selectors should select &quot;influence attributes&quot;" time="0.001">
    </testcase>
    <testcase classname="createEditRule selectors should select &quot;diversity&quot;" name="createEditRule selectors should select &quot;diversity&quot;" time="0">
    </testcase>
    <testcase classname="createEditRule selectors should select &quot;UI createEdit&quot;" name="createEditRule selectors should select &quot;UI createEdit&quot;" time="0">
    </testcase>
    <testcase classname="createEditRule selectors should select &quot;UI rule data&quot;" name="createEditRule selectors should select &quot;UI rule data&quot;" time="0.001">
    </testcase>
    <testcase classname="createEditRule selectors should select &quot;rule scope&quot;" name="createEditRule selectors should select &quot;rule scope&quot;" time="0.004">
    </testcase>
    <testcase classname="createEditRule selectors should select &quot;rule diversity&quot;" name="createEditRule selectors should select &quot;rule diversity&quot;" time="0.001">
    </testcase>
    <testcase classname="createEditRule selectors should select &quot;rule space&quot;" name="createEditRule selectors should select &quot;rule space&quot;" time="0">
    </testcase>
    <testcase classname="createEditRule selectors should select &quot;derived scope values&quot;" name="createEditRule selectors should select &quot;derived scope values&quot;" time="0.001">
    </testcase>
    <testcase classname="createEditRule selectors should select &quot;derived influence values&quot;" name="createEditRule selectors should select &quot;derived influence values&quot;" time="0">
    </testcase>
    <testcase classname="createEditRule selectors should select &quot;derived diversity values&quot;" name="createEditRule selectors should select &quot;derived diversity values&quot;" time="0">
    </testcase>
    <testcase classname="createEditRule selectors should select &quot;space constraints values&quot;" name="createEditRule selectors should select &quot;space constraints values&quot;" time="0.001">
    </testcase>
    <testcase classname="createEditRule selectors should select &quot;rule errors&quot;" name="createEditRule selectors should select &quot;rule errors&quot;" time="0">
    </testcase>
    <testcase classname="createEditRule selectors should select &quot;rule summary&quot;" name="createEditRule selectors should select &quot;rule summary&quot;" time="0">
    </testcase>
    <testcase classname="createEditRule selectors should return derived rule values" name="createEditRule selectors should return derived rule values" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Rules saga" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:33" time="4.035" tests="19">
    <testcase classname="Rules saga fetchRules" name="Rules saga fetchRules" time="0.007">
    </testcase>
    <testcase classname="Rules saga updateRuleOptionsByAttribute" name="Rules saga updateRuleOptionsByAttribute" time="0.014">
    </testcase>
    <testcase classname="Rules saga getRuleSummaryAvailableByTypology" name="Rules saga getRuleSummaryAvailableByTypology" time="0.011">
    </testcase>
    <testcase classname="Rules saga getRuleSummarySelected" name="Rules saga getRuleSummarySelected" time="0.002">
    </testcase>
    <testcase classname="Rules saga getRuleMETA" name="Rules saga getRuleMETA" time="0.002">
    </testcase>
    <testcase classname="Rules saga fetchRuleById handle !hasInfluenceAttributes" name="Rules saga fetchRuleById handle !hasInfluenceAttributes" time="0.004">
    </testcase>
    <testcase classname="Rules saga fetchRuleById handle !hasDiversityAttributes" name="Rules saga fetchRuleById handle !hasDiversityAttributes" time="0.003">
    </testcase>
    <testcase classname="Rules saga clearRuleUiData" name="Rules saga clearRuleUiData" time="0.015">
    </testcase>
    <testcase classname="Rules saga getRuleSummaryAvailableByAssortmentCode" name="Rules saga getRuleSummaryAvailableByAssortmentCode" time="0.005">
    </testcase>
    <testcase classname="Rules saga getRuleSummaryAvailable by Typology" name="Rules saga getRuleSummaryAvailable by Typology" time="0.002">
    </testcase>
    <testcase classname="Rules saga getRuleSummaryAvailable by AssortmentCode" name="Rules saga getRuleSummaryAvailable by AssortmentCode" time="0.002">
    </testcase>
    <testcase classname="Rules saga submitRule invalid attributes" name="Rules saga submitRule invalid attributes" time="0.002">
    </testcase>
    <testcase classname="Rules saga submitRule valid attributes - Create rule" name="Rules saga submitRule valid attributes - Create rule" time="0.003">
    </testcase>
    <testcase classname="Rules saga submitRule valid attributes - Update rule" name="Rules saga submitRule valid attributes - Update rule" time="0.005">
    </testcase>
    <testcase classname="Rules saga submitListOfRules" name="Rules saga submitListOfRules" time="0.001">
    </testcase>
    <testcase classname="Rules saga onFetchRuleData" name="Rules saga onFetchRuleData" time="0.002">
    </testcase>
    <testcase classname="Rules saga saveRulesPriority" name="Rules saga saveRulesPriority" time="0.002">
    </testcase>
    <testcase classname="Rules saga deleteRule" name="Rules saga deleteRule" time="0.002">
    </testcase>
    <testcase classname="Rules saga withdrawRules" name="Rules saga withdrawRules" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Notification Service" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:34" time="4.08" tests="6">
    <testcase classname="Notification Service base actions should close a notification" name="Notification Service base actions should close a notification" time="0.002">
    </testcase>
    <testcase classname="Notification Service base actions should enqueue a base notification" name="Notification Service base actions should enqueue a base notification" time="0.004">
    </testcase>
    <testcase classname="Notification Service typed actions should enqueue an error notification" name="Notification Service typed actions should enqueue an error notification" time="0.001">
    </testcase>
    <testcase classname="Notification Service typed actions should enqueue a warning notification" name="Notification Service typed actions should enqueue a warning notification" time="0.007">
    </testcase>
    <testcase classname="Notification Service typed actions should enqueue a success notification" name="Notification Service typed actions should enqueue a success notification" time="0.002">
    </testcase>
    <testcase classname="Notification Service typed actions should enqueue an info notification" name="Notification Service typed actions should enqueue an info notification" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="space actions" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:38" time="0.621" tests="6">
    <testcase classname="space actions should create an action to get block type compariosn" name="space actions should create an action to get block type compariosn" time="0.001">
    </testcase>
    <testcase classname="space actions should create an action to set block type compariosn" name="space actions should create an action to set block type compariosn" time="0">
    </testcase>
    <testcase classname="space actions should create an action to get subfamilies repartition" name="space actions should create an action to get subfamilies repartition" time="0.001">
    </testcase>
    <testcase classname="space actions should create an action to set subfamilies repartition" name="space actions should create an action to set subfamilies repartition" time="0">
    </testcase>
    <testcase classname="space actions should create an action to set block type comparison user data" name="space actions should create an action to set block type comparison user data" time="0">
    </testcase>
    <testcase classname="space actions should create an action to set subfamilies repartition user data" name="space actions should create an action to set subfamilies repartition user data" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:39" time="0.874" tests="2">
    <testcase classname=" renders without crashing primary" name=" renders without crashing primary" time="0.106">
    </testcase>
    <testcase classname=" renders without crashing secondary" name=" renders without crashing secondary" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="useWindowSize hook" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:40" time="0.746" tests="2">
    <testcase classname="useWindowSize hook should return initial window sizes" name="useWindowSize hook should return initial window sizes" time="0.051">
    </testcase>
    <testcase classname="useWindowSize hook should return custom window sizes" name="useWindowSize hook should return custom window sizes" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Normalize Test" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:40" time="0.53" tests="1">
    <testcase classname="Normalize Test yearsToArray function" name="Normalize Test yearsToArray function" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="selectors" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:38" time="3.378" tests="2">
    <testcase classname="selectors should return adjustment dialog allocation" name="selectors should return adjustment dialog allocation" time="0.003">
    </testcase>
    <testcase classname="selectors should return assortment codes list" name="selectors should return assortment codes list" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Storage Service" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:41" time="0.317" tests="4">
    <testcase classname="Storage Service should set and retrieve value from store" name="Storage Service should set and retrieve value from store" time="0.001">
    </testcase>
    <testcase classname="Storage Service should remove values from store" name="Storage Service should remove values from store" time="0">
    </testcase>
    <testcase classname="Storage Service should set and retrieve value from store (in session)" name="Storage Service should set and retrieve value from store (in session)" time="0">
    </testcase>
    <testcase classname="Storage Service should remove values from store (in session)" name="Storage Service should remove values from store (in session)" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="NewPromo Saga Test" errors="0" failures="0" skipped="1" timestamp="2020-04-15T15:29:37" time="4.198" tests="5">
    <testcase classname="NewPromo Saga Test fetchRecommendedSKUs" name="NewPromo Saga Test fetchRecommendedSKUs" time="0">
      <skipped/>
    </testcase>
    <testcase classname="NewPromo Saga Test simulateNemPromo runs the simulation" name="NewPromo Saga Test simulateNemPromo runs the simulation" time="0.002">
    </testcase>
    <testcase classname="NewPromo Saga Test simulateNemPromo passes the negative value if upcoming are absense" name="NewPromo Saga Test simulateNemPromo passes the negative value if upcoming are absense" time="0.001">
    </testcase>
    <testcase classname="NewPromo Saga Test simulateNemPromo handles errors" name="NewPromo Saga Test simulateNemPromo handles errors" time="0.005">
    </testcase>
    <testcase classname="NewPromo Saga Test simulateNemPromo handles 413 error" name="NewPromo Saga Test simulateNemPromo handles 413 error" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Exception Service" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:37" time="4.178" tests="2">
    <testcase classname="Exception Service should catchRejection" name="Exception Service should catchRejection" time="0.002">
    </testcase>
    <testcase classname="Exception Service should catchError" name="Exception Service should catchError" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="space selectors" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:41" time="0.624" tests="18">
    <testcase classname="space selectors should select &quot;family id&quot;" name="space selectors should select &quot;family id&quot;" time="0.001">
    </testcase>
    <testcase classname="space selectors should select &quot;family name&quot;" name="space selectors should select &quot;family name&quot;" time="0">
    </testcase>
    <testcase classname="space selectors should select &quot;block type comparison&quot;" name="space selectors should select &quot;block type comparison&quot;" time="0">
    </testcase>
    <testcase classname="space selectors should select &quot;subfamilies repartitioning&quot;" name="space selectors should select &quot;subfamilies repartitioning&quot;" time="0">
    </testcase>
    <testcase classname="space selectors should select &quot;is block type comp. loading&quot;" name="space selectors should select &quot;is block type comp. loading&quot;" time="0">
    </testcase>
    <testcase classname="space selectors should select &quot;is subfamilies rep. loading&quot;" name="space selectors should select &quot;is subfamilies rep. loading&quot;" time="0">
    </testcase>
    <testcase classname="space selectors should select &quot;distributions rows&quot;" name="space selectors should select &quot;distributions rows&quot;" time="0.001">
    </testcase>
    <testcase classname="space selectors should select &quot;subfam. rep. space rows&quot;" name="space selectors should select &quot;subfam. rep. space rows&quot;" time="0">
    </testcase>
    <testcase classname="space selectors should select &quot;subfam. rep. SKU rows&quot;" name="space selectors should select &quot;subfam. rep. SKU rows&quot;" time="0.001">
    </testcase>
    <testcase classname="space selectors should select &quot;subfam. rep. total rows&quot;" name="space selectors should select &quot;subfam. rep. total rows&quot;" time="0">
    </testcase>
    <testcase classname="space selectors should select &quot;subfam. rep. sku total rows&quot;" name="space selectors should select &quot;subfam. rep. sku total rows&quot;" time="0.001">
    </testcase>
    <testcase classname="space selectors should select &quot;blocks type comp. user data&quot;" name="space selectors should select &quot;blocks type comp. user data&quot;" time="0">
    </testcase>
    <testcase classname="space selectors should select &quot;subfam. rep. user data&quot;" name="space selectors should select &quot;subfam. rep. user data&quot;" time="0">
    </testcase>
    <testcase classname="space selectors should select &quot;subfam. rep. delta&quot;" name="space selectors should select &quot;subfam. rep. delta&quot;" time="0.012">
    </testcase>
    <testcase classname="space selectors should select &quot;is delta invalid&quot;" name="space selectors should select &quot;is delta invalid&quot;" time="0">
    </testcase>
    <testcase classname="space selectors should select &quot;is submit disabled&quot;" name="space selectors should select &quot;is submit disabled&quot;" time="0">
    </testcase>
    <testcase classname="space selectors should select &quot;is blocks type comp disabled&quot;" name="space selectors should select &quot;is blocks type comp disabled&quot;" time="0">
    </testcase>
    <testcase classname="space selectors should select &quot;space reset&quot;" name="space selectors should select &quot;space reset&quot;" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Graphql Service" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:41" time="0.518" tests="5">
    <testcase classname="Graphql Service should call ApolloClient constructor" name="Graphql Service should call ApolloClient constructor" time="0.001">
    </testcase>
    <testcase classname="Graphql Service getData should retrieve data" name="Graphql Service getData should retrieve data" time="0.001">
    </testcase>
    <testcase classname="Graphql Service getData should handle result errors" name="Graphql Service getData should handle result errors" time="0.001">
    </testcase>
    <testcase classname="Graphql Service mutateData should return data" name="Graphql Service mutateData should return data" time="0.001">
    </testcase>
    <testcase classname="Graphql Service mutateData should handle result errors" name="Graphql Service mutateData should handle result errors" time="0">
    </testcase>
  </testsuite>
  <testsuite name="typeComparison" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:41" time="0.514" tests="1">
    <testcase classname="typeComparison should set blocks type comparison" name="typeComparison should set blocks type comparison" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:41" time="0.77" tests="1">
    <testcase classname=" renders without crashing" name=" renders without crashing" time="0.068">
    </testcase>
  </testsuite>
  <testsuite name="App saga" errors="0" failures="0" skipped="1" timestamp="2020-04-15T15:29:37" time="4.492" tests="15">
    <testcase classname="App saga getCountries executes successfuly" name="App saga getCountries executes successfuly" time="0.002">
    </testcase>
    <testcase classname="App saga getCountries handles errors" name="App saga getCountries handles errors" time="0.007">
    </testcase>
    <testcase classname="App saga dataProvider finalise application loading" name="App saga dataProvider finalise application loading" time="0.003">
    </testcase>
    <testcase classname="App saga dataProvider reset application on public routes" name="App saga dataProvider reset application on public routes" time="0">
      <skipped/>
    </testcase>
    <testcase classname="App saga dataProvider change application on assortment routes" name="App saga dataProvider change application on assortment routes" time="0.002">
    </testcase>
    <testcase classname="App saga dataProvider change application on promo routes" name="App saga dataProvider change application on promo routes" time="0.002">
    </testcase>
    <testcase classname="App saga initializeApplication executes successfuly" name="App saga initializeApplication executes successfuly" time="0.009">
    </testcase>
    <testcase classname="App saga logMessage executes successfuly without group" name="App saga logMessage executes successfuly without group" time="0.001">
    </testcase>
    <testcase classname="App saga logMessage executes successfuly with group" name="App saga logMessage executes successfuly with group" time="0.003">
    </testcase>
    <testcase classname="App saga logMessage handles errors" name="App saga logMessage handles errors" time="0.001">
    </testcase>
    <testcase classname="App saga changeLocation executes successfuly non-parametrized URL" name="App saga changeLocation executes successfuly non-parametrized URL" time="0.004">
    </testcase>
    <testcase classname="App saga changeLocation executes successfuly parametrized URL" name="App saga changeLocation executes successfuly parametrized URL" time="0.005">
    </testcase>
    <testcase classname="App saga changeLocation executes successfuly parametrized URL from current" name="App saga changeLocation executes successfuly parametrized URL from current" time="0.001">
    </testcase>
    <testcase classname="App saga switchApplication handles a promo app" name="App saga switchApplication handles a promo app" time="0.001">
    </testcase>
    <testcase classname="App saga switchApplication handles a assortment app" name="App saga switchApplication handles a assortment app" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Main App Component" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:38" time="4.075" tests="1">
    <testcase classname="Main App Component should render component with Route" name="Main App Component should render component with Route" time="0.068">
    </testcase>
  </testsuite>
  <testsuite name="Rules selectors" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:42" time="0.52" tests="6">
    <testcase classname="Rules selectors take family id from router" name="Rules selectors take family id from router" time="0.001">
    </testcase>
    <testcase classname="Rules selectors Select RulesFamilyName" name="Rules selectors Select RulesFamilyName" time="0">
    </testcase>
    <testcase classname="Rules selectors Select RulesList" name="Rules selectors Select RulesList" time="0">
    </testcase>
    <testcase classname="Rules selectors Select RulesIsSubmitted" name="Rules selectors Select RulesIsSubmitted" time="0.001">
    </testcase>
    <testcase classname="Rules selectors Select PriorityEditMode" name="Rules selectors Select PriorityEditMode" time="0">
    </testcase>
    <testcase classname="Rules selectors Select PriorityEditMode" name="Rules selectors Select PriorityEditMode" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Rules selectors" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:42" time="0.471" tests="1">
    <testcase classname="Rules selectors Select SyncDate" name="Rules selectors Select SyncDate" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Helpers" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:42" time="0.419" tests="8">
    <testcase classname="Helpers getAssortmentBreadcrumbs should handle simple cases" name="Helpers getAssortmentBreadcrumbs should handle simple cases" time="0.025">
    </testcase>
    <testcase classname="Helpers getAssortmentBreadcrumbs should handle nested cases" name="Helpers getAssortmentBreadcrumbs should handle nested cases" time="0.001">
    </testcase>
    <testcase classname="Helpers getPromoBreadcrumbs should show all selection on empty inputs" name="Helpers getPromoBreadcrumbs should show all selection on empty inputs" time="0.002">
    </testcase>
    <testcase classname="Helpers getPromoBreadcrumbs should handle departments" name="Helpers getPromoBreadcrumbs should handle departments" time="0.001">
    </testcase>
    <testcase classname="Helpers getPromoBreadcrumbs should handle sections" name="Helpers getPromoBreadcrumbs should handle sections" time="0">
    </testcase>
    <testcase classname="Helpers getPromoBreadcrumbs should handle families" name="Helpers getPromoBreadcrumbs should handle families" time="0">
    </testcase>
    <testcase classname="Helpers getPromoBreadcrumbs should handle subfamilies" name="Helpers getPromoBreadcrumbs should handle subfamilies" time="0">
    </testcase>
    <testcase classname="Helpers getPromoBreadcrumbs should collapse multiple entries" name="Helpers getPromoBreadcrumbs should collapse multiple entries" time="0">
    </testcase>
  </testsuite>
  <testsuite name="selectors" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:42" time="0.499" tests="3">
    <testcase classname="selectors should return product tree data" name="selectors should return product tree data" time="0.001">
    </testcase>
    <testcase classname="selectors should return search value" name="selectors should return search value" time="0">
    </testcase>
    <testcase classname="selectors should return array of tree nodes filtered by search value" name="selectors should return array of tree nodes filtered by search value" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="rule normalizers" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:42" time="0.719" tests="18">
    <testcase classname="rule normalizers normalizeRuleMeta" name="rule normalizers normalizeRuleMeta" time="0.001">
    </testcase>
    <testcase classname="rule normalizers normalizeRulesList should return sorted asc sorted list" name="rule normalizers normalizeRulesList should return sorted asc sorted list" time="0.009">
    </testcase>
    <testcase classname="rule normalizers deriveRuleErrors should handle Specific Subfamilies required" name="rule normalizers deriveRuleErrors should handle Specific Subfamilies required" time="0.001">
    </testcase>
    <testcase classname="rule normalizers deriveRuleErrors should handle Typology required" name="rule normalizers deriveRuleErrors should handle Typology required" time="0">
    </testcase>
    <testcase classname="rule normalizers deriveRuleErrors should handle targetCode required" name="rule normalizers deriveRuleErrors should handle targetCode required" time="0.001">
    </testcase>
    <testcase classname="rule normalizers deriveRuleErrors should handle scope required attribute value" name="rule normalizers deriveRuleErrors should handle scope required attribute value" time="0">
    </testcase>
    <testcase classname="rule normalizers deriveRuleErrors should handle influence required attribute" name="rule normalizers deriveRuleErrors should handle influence required attribute" time="0.001">
    </testcase>
    <testcase classname="rule normalizers deriveRuleErrors should handle diversity required attribute value" name="rule normalizers deriveRuleErrors should handle diversity required attribute value" time="0">
    </testcase>
    <testcase classname="rule normalizers deriveRuleErrors should handle diversity required attribute" name="rule normalizers deriveRuleErrors should handle diversity required attribute" time="0">
    </testcase>
    <testcase classname="rule normalizers deriveRuleErrors should handle constraints required attribute" name="rule normalizers deriveRuleErrors should handle constraints required attribute" time="0.001">
    </testcase>
    <testcase classname="rule normalizers deriveRuleErrors should handle constraints required attribute value" name="rule normalizers deriveRuleErrors should handle constraints required attribute value" time="0">
    </testcase>
    <testcase classname="rule normalizers deriveRuleErrors should handle rule name required" name="rule normalizers deriveRuleErrors should handle rule name required" time="0">
    </testcase>
    <testcase classname="rule normalizers normalizeRuleSummarySelected" name="rule normalizers normalizeRuleSummarySelected" time="0.001">
    </testcase>
    <testcase classname="rule normalizers normalizeRuleSummaryAttributes" name="rule normalizers normalizeRuleSummaryAttributes" time="0">
    </testcase>
    <testcase classname="rule normalizers normalizeAvailableTypology" name="rule normalizers normalizeAvailableTypology" time="0.001">
    </testcase>
    <testcase classname="rule normalizers normalizeAvailableAssortmentCode handle not empty data" name="rule normalizers normalizeAvailableAssortmentCode handle not empty data" time="0">
    </testcase>
    <testcase classname="rule normalizers normalizeAvailableAssortmentCode handle empty data" name="rule normalizers normalizeAvailableAssortmentCode handle empty data" time="0">
    </testcase>
    <testcase classname="rule normalizers deriveSaveRuleAttributes" name="rule normalizers deriveSaveRuleAttributes" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="subNav reducer" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:42" time="0.468" tests="1">
    <testcase classname="subNav reducer should handle GET_PRODUCT_TREE_SUCCESS" name="subNav reducer should handle GET_PRODUCT_TREE_SUCCESS" time="0">
    </testcase>
  </testsuite>
  <testsuite name="actions" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:42" time="0.489" tests="9">
    <testcase classname="actions should create an action to fetch products table config request" name="actions should create an action to fetch products table config request" time="0.001">
    </testcase>
    <testcase classname="actions should create an action to fetch products table config success" name="actions should create an action to fetch products table config success" time="0">
    </testcase>
    <testcase classname="actions should create an action to clear products table config" name="actions should create an action to clear products table config" time="0">
    </testcase>
    <testcase classname="actions should create an action to fetch precalculated KPI request" name="actions should create an action to fetch precalculated KPI request" time="0.001">
    </testcase>
    <testcase classname="actions should create an action to fetch precalculated KPI success" name="actions should create an action to fetch precalculated KPI success" time="0">
    </testcase>
    <testcase classname="actions should create an action to get precalculated allocation" name="actions should create an action to get precalculated allocation" time="0">
    </testcase>
    <testcase classname="actions should create an action to set precalculated allocation" name="actions should create an action to set precalculated allocation" time="0.001">
    </testcase>
    <testcase classname="actions should create an action to get assortment codes" name="actions should create an action to get assortment codes" time="0">
    </testcase>
    <testcase classname="actions should create an action to set assortment codes" name="actions should create an action to set assortment codes" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Normalize User Claims" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:42" time="0.503" tests="3">
    <testcase classname="Normalize User Claims should transform normal values" name="Normalize User Claims should transform normal values" time="0.004">
    </testcase>
    <testcase classname="Normalize User Claims should handle empty values" name="Normalize User Claims should handle empty values" time="0.001">
    </testcase>
    <testcase classname="Normalize User Claims should transform partial values" name="Normalize User Claims should transform partial values" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Rules selectors" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:42" time="0.479" tests="2">
    <testcase classname="Rules selectors Select SortOrder" name="Rules selectors Select SortOrder" time="0">
    </testcase>
    <testcase classname="Rules selectors Select OrderBy" name="Rules selectors Select OrderBy" time="0">
    </testcase>
  </testsuite>
  <testsuite name="products normalize" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:43" time="0.532" tests="7">
    <testcase classname="products normalize deriveHeadingGroup" name="products normalize deriveHeadingGroup" time="0.001">
    </testcase>
    <testcase classname="products normalize deriveProperties" name="products normalize deriveProperties" time="0">
    </testcase>
    <testcase classname="products normalize deriveAssortmentCodeRows" name="products normalize deriveAssortmentCodeRows" time="0">
    </testcase>
    <testcase classname="products normalize deriveProductsXLSSheetRows" name="products normalize deriveProductsXLSSheetRows" time="0.004">
    </testcase>
    <testcase classname="products normalize deriveAssortmentCodeSheetRows" name="products normalize deriveAssortmentCodeSheetRows" time="0.002">
    </testcase>
    <testcase classname="products normalize deriveProductsKPIXLSSheetRows" name="products normalize deriveProductsKPIXLSSheetRows" time="0.001">
    </testcase>
    <testcase classname="products normalize normalizePrecalculatedAllocation" name="products normalize normalizePrecalculatedAllocation" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Storyshots" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:20" time="22.505" tests="39">
    <testcase classname="Storyshots App|Assortment Tree View" name="Storyshots App|Assortment Tree View" time="0.537">
    </testcase>
    <testcase classname="Storyshots App|Assortment Space Distribution" name="Storyshots App|Assortment Space Distribution" time="0.469">
    </testcase>
    <testcase classname="Storyshots App|Assortment Sub Families Repartition" name="Storyshots App|Assortment Sub Families Repartition" time="0.321">
    </testcase>
    <testcase classname="Storyshots Components|Breadcrumbs Default" name="Storyshots Components|Breadcrumbs Default" time="0.059">
    </testcase>
    <testcase classname="Storyshots Components|Button Button" name="Storyshots Components|Button Button" time="0.05">
    </testcase>
    <testcase classname="Storyshots Components|Button List Button" name="Storyshots Components|Button List Button" time="0.09">
    </testcase>
    <testcase classname="Storyshots Components|Disabled Content Simple" name="Storyshots Components|Disabled Content Simple" time="0.01">
    </testcase>
    <testcase classname="Storyshots Components|Disabled Content With Complex Component" name="Storyshots Components|Disabled Content With Complex Component" time="0.155">
    </testcase>
    <testcase classname="Storyshots Components|Error Boundary Default" name="Storyshots Components|Error Boundary Default" time="0.185">
    </testcase>
    <testcase classname="Storyshots Components|Instruction Popover Default Anchor Origin" name="Storyshots Components|Instruction Popover Default Anchor Origin" time="0.019">
    </testcase>
    <testcase classname="Storyshots Components|Instruction Popover Custom Anchor Origin" name="Storyshots Components|Instruction Popover Custom Anchor Origin" time="0.038">
    </testcase>
    <testcase classname="Storyshots Components|Loader Simple" name="Storyshots Components|Loader Simple" time="0.03">
    </testcase>
    <testcase classname="Storyshots Components|Modal Full Screen" name="Storyshots Components|Modal Full Screen" time="0.03">
    </testcase>
    <testcase classname="Storyshots Components|Modal Dialog" name="Storyshots Components|Modal Dialog" time="0.056">
    </testcase>
    <testcase classname="Storyshots Components|Modal Small Dialog" name="Storyshots Components|Modal Small Dialog" time="0.048">
    </testcase>
    <testcase classname="Storyshots Components|Modal Alert" name="Storyshots Components|Modal Alert" time="0.07">
    </testcase>
    <testcase classname="Storyshots Components|Tabs Navigation Tabs" name="Storyshots Components|Tabs Navigation Tabs" time="0.063">
    </testcase>
    <testcase classname="Storyshots Components|Pagination Default" name="Storyshots Components|Pagination Default" time="0.091">
    </testcase>
    <testcase classname="Storyshots Components|Placeholders No Data Box" name="Storyshots Components|Placeholders No Data Box" time="0.02">
    </testcase>
    <testcase classname="Storyshots Components|Placeholders No Data Hoc" name="Storyshots Components|Placeholders No Data Hoc" time="0.014">
    </testcase>
    <testcase classname="Storyshots Components|Placeholders Not Found" name="Storyshots Components|Placeholders Not Found" time="0.019">
    </testcase>
    <testcase classname="Storyshots Components|Section Simple" name="Storyshots Components|Section Simple" time="0.112">
    </testcase>
    <testcase classname="Storyshots Components|Truncate Text Default" name="Storyshots Components|Truncate Text Default" time="0.021">
    </testcase>
    <testcase classname="Storyshots Components|Truncate Text Lines" name="Storyshots Components|Truncate Text Lines" time="0.026">
    </testcase>
    <testcase classname="Storyshots Components|Truncate Text Tooltip Placement" name="Storyshots Components|Truncate Text Tooltip Placement" time="0.038">
    </testcase>
    <testcase classname="Storyshots Components|Truncate Text With Custom String Ellipsis" name="Storyshots Components|Truncate Text With Custom String Ellipsis" time="0.017">
    </testcase>
    <testcase classname="Storyshots Components|Truncate Text With Custom Component Ellipsis" name="Storyshots Components|Truncate Text With Custom Component Ellipsis" time="0.017">
    </testcase>
    <testcase classname="Storyshots Components|Form Search" name="Storyshots Components|Form Search" time="0.061">
    </testcase>
    <testcase classname="Storyshots Components|Form Checkbox" name="Storyshots Components|Form Checkbox" time="0.039">
    </testcase>
    <testcase classname="Storyshots Components|Form Radio Group" name="Storyshots Components|Form Radio Group" time="0.05">
    </testcase>
    <testcase classname="Storyshots Components|Form Date Picker" name="Storyshots Components|Form Date Picker" time="0.15">
    </testcase>
    <testcase classname="Storyshots Components|Form Input Autocomplete" name="Storyshots Components|Form Input Autocomplete" time="0.021">
    </testcase>
    <testcase classname="Storyshots Components|Form/Select/Multiple Simple" name="Storyshots Components|Form/Select/Multiple Simple" time="0.061">
    </testcase>
    <testcase classname="Storyshots Components|Form/Select/Multiple With Selection Controls" name="Storyshots Components|Form/Select/Multiple With Selection Controls" time="0.065">
    </testcase>
    <testcase classname="Storyshots Components|Form/Select/Multiple Custom Item Value" name="Storyshots Components|Form/Select/Multiple Custom Item Value" time="0.056">
    </testcase>
    <testcase classname="Storyshots Components|Form/Select/Multiple Custom Form Value" name="Storyshots Components|Form/Select/Multiple Custom Form Value" time="0.069">
    </testcase>
    <testcase classname="Storyshots Components|Form/Select Simple" name="Storyshots Components|Form/Select Simple" time="0.043">
    </testcase>
    <testcase classname="Storyshots System Color" name="Storyshots System Color" time="0.15">
    </testcase>
    <testcase classname="Storyshots System Typography" name="Storyshots System Typography" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="Tools service" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:43" time="0.565" tests="27">
    <testcase classname="Tools service deriveDiffInPercent should handle negative increase" name="Tools service deriveDiffInPercent should handle negative increase" time="0.006">
    </testcase>
    <testcase classname="Tools service deriveDiffInPercent should handle positive increase" name="Tools service deriveDiffInPercent should handle positive increase" time="0.001">
    </testcase>
    <testcase classname="Tools service deriveDiffInPercent should format with precision of 1" name="Tools service deriveDiffInPercent should format with precision of 1" time="0.001">
    </testcase>
    <testcase classname="Tools service deriveDiffInPercent should handle a == 0" name="Tools service deriveDiffInPercent should handle a == 0" time="0.001">
    </testcase>
    <testcase classname="Tools service deriveDiffInPercent should handle b == 0" name="Tools service deriveDiffInPercent should handle b == 0" time="0">
    </testcase>
    <testcase classname="Tools service deriveDiffInPercent should handle a == b" name="Tools service deriveDiffInPercent should handle a == b" time="0">
    </testcase>
    <testcase classname="Tools service stringToNumber should convert string to number" name="Tools service stringToNumber should convert string to number" time="0">
    </testcase>
    <testcase classname="Tools service stringToNumber should return number if target is number" name="Tools service stringToNumber should return number if target is number" time="0.001">
    </testcase>
    <testcase classname="Tools service should sort values" name="Tools service should sort values" time="0">
    </testcase>
    <testcase classname="Tools service should add new cell to array of cells" name="Tools service should add new cell to array of cells" time="0">
    </testcase>
    <testcase classname="Tools service should replace cell in array of cells" name="Tools service should replace cell in array of cells" time="0.001">
    </testcase>
    <testcase classname="Tools service  TEST sumFromArray, return value by valid " name="Tools service  TEST sumFromArray, return value by valid " time="0">
    </testcase>
    <testcase classname="Tools service TEST avgFormArray should return avg value" name="Tools service TEST avgFormArray should return avg value" time="0">
    </testcase>
    <testcase classname="Tools service TEST toNoRoundedAED should return value like 000.000" name="Tools service TEST toNoRoundedAED should return value like 000.000" time="0">
    </testcase>
    <testcase classname="Tools service TEST toNoRoundedAED should return value like 000.0" name="Tools service TEST toNoRoundedAED should return value like 000.0" time="0.001">
    </testcase>
    <testcase classname="Tools service TEST isTableCellHide if product level more than 1" name="Tools service TEST isTableCellHide if product level more than 1" time="0">
    </testcase>
    <testcase classname="Tools service TEST isTableCellHide if product level less than 1" name="Tools service TEST isTableCellHide if product level less than 1" time="0">
    </testcase>
    <testcase classname="Tools service getSortingQuery should handle ordinar single sorting" name="Tools service getSortingQuery should handle ordinar single sorting" time="0">
    </testcase>
    <testcase classname="Tools service getSortingQuery should handle ordinar multiple sorting" name="Tools service getSortingQuery should handle ordinar multiple sorting" time="0.001">
    </testcase>
    <testcase classname="Tools service getSortingQuery should handle default single sorting" name="Tools service getSortingQuery should handle default single sorting" time="0">
    </testcase>
    <testcase classname="Tools service getSortingQuery should handle default multiple sorting" name="Tools service getSortingQuery should handle default multiple sorting" time="0">
    </testcase>
    <testcase classname="Tools service getSortingQuery should not choose default sorting if ordinar is present" name="Tools service getSortingQuery should not choose default sorting if ordinar is present" time="0">
    </testcase>
    <testcase classname="Tools service getSortingQuery should handle empty sorting" name="Tools service getSortingQuery should handle empty sorting" time="0.001">
    </testcase>
    <testcase classname="getSelectedItemsMessage should be &quot;All items&quot;" name="getSelectedItemsMessage should be &quot;All items&quot;" time="0">
    </testcase>
    <testcase classname="getSelectedItemsMessage should be &quot;1 item&quot;" name="getSelectedItemsMessage should be &quot;1 item&quot;" time="0">
    </testcase>
    <testcase classname="getSelectedItemsMessage should be &quot;5 items&quot;" name="getSelectedItemsMessage should be &quot;5 items&quot;" time="0.001">
    </testcase>
    <testcase classname="getSelectedItemsMessage should be empty" name="getSelectedItemsMessage should be empty" time="0">
    </testcase>
  </testsuite>
  <testsuite name="space normalize" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:43" time="0.508" tests="5">
    <testcase classname="space normalize denormalizeBlocksTypeComparisonData" name="space normalize denormalizeBlocksTypeComparisonData" time="0">
    </testcase>
    <testcase classname="space normalize denormalizeSubfamiliesRepartitionData" name="space normalize denormalizeSubfamiliesRepartitionData" time="0">
    </testcase>
    <testcase classname="space normalize deriveSpaceRepartitionSheetRows" name="space normalize deriveSpaceRepartitionSheetRows" time="0.001">
    </testcase>
    <testcase classname="space normalize deriveSKURepartitionSheetRows" name="space normalize deriveSKURepartitionSheetRows" time="0.001">
    </testcase>
    <testcase classname="space normalize deriveSpaceStoreDeclarationSheetRows" name="space normalize deriveSpaceStoreDeclarationSheetRows" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:43" time="0.456" tests="2">
    <testcase classname=" should create an action to set sort params" name=" should create an action to set sort params" time="0.001">
    </testcase>
    <testcase classname=" should create an action to clear sort" name=" should create an action to clear sort" time="0">
    </testcase>
  </testsuite>
  <testsuite name="StoreLoggerMiddleware service" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:43" time="0.533" tests="2">
    <testcase classname="StoreLoggerMiddleware service has to work with generators in call" name="StoreLoggerMiddleware service has to work with generators in call" time="0.001">
    </testcase>
    <testcase classname="StoreLoggerMiddleware service has to push actions when in happens" name="StoreLoggerMiddleware service has to push actions when in happens" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="actions" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:43" time="0.507" tests="2">
    <testcase classname="actions should create an action to get product tree" name="actions should create an action to get product tree" time="0.001">
    </testcase>
    <testcase classname="actions should create an action to set search value" name="actions should create an action to set search value" time="0">
    </testcase>
  </testsuite>
  <testsuite name="universe normalize" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:43" time="0.534" tests="4">
    <testcase classname="universe normalize should denormalizeUniverseRepartitionData" name="universe normalize should denormalizeUniverseRepartitionData" time="0">
    </testcase>
    <testcase classname="universe normalize should denormalizeSubfamiliesRepartitionUserData" name="universe normalize should denormalizeSubfamiliesRepartitionUserData" time="0.001">
    </testcase>
    <testcase classname="universe normalize should deriveRepartitionSheetRows" name="universe normalize should deriveRepartitionSheetRows" time="0.001">
    </testcase>
    <testcase classname="universe normalize should deriveStoreDeclarationSheetRows" name="universe normalize should deriveStoreDeclarationSheetRows" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="sidebar normalizer" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:43" time="0.473" tests="1">
    <testcase classname="sidebar normalizer normalizeSidebarTree should filter universes" name="sidebar normalizer normalizeSidebarTree should filter universes" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Localization service" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:43" time="0.497" tests="3">
    <testcase classname="Localization service Returns value by valid lang key" name="Localization service Returns value by valid lang key" time="0.001">
    </testcase>
    <testcase classname="Localization service should return value with props" name="Localization service should return value with props" time="0">
    </testcase>
    <testcase classname="Localization service should return key as value if no value for provided key" name="Localization service should return key as value if no value for provided key" time="0">
    </testcase>
  </testsuite>
  <testsuite name="stores normalize" errors="0" failures="0" skipped="0" timestamp="2020-04-15T15:29:43" time="0.359" tests="3">
    <testcase classname="stores normalize deriveStoreAddDeleteSheetRows" name="stores normalize deriveStoreAddDeleteSheetRows" time="0.002">
    </testcase>
    <testcase classname="stores normalize normalizeStoreData" name="stores normalize normalizeStoreData" time="0.001">
    </testcase>
    <testcase classname="stores normalize normalizeStoreMatrixData" name="stores normalize normalizeStoreMatrixData" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Formats service" errors="0" failures="1" skipped="0" timestamp="2020-04-15T15:29:43" time="1.437" tests="24">
    <testcase classname="Formats service [Function percentage] should return &quot;1,234,567.9%&quot; when the value is &quot;1234567.89&quot;" name="Formats service [Function percentage] should return &quot;1,234,567.9%&quot; when the value is &quot;1234567.89&quot;" time="0.001">
    </testcase>
    <testcase classname="Formats service [Function percentage] should return &quot;-&quot; when the value is &quot;&quot;" name="Formats service [Function percentage] should return &quot;-&quot; when the value is &quot;&quot;" time="0">
    </testcase>
    <testcase classname="Formats service [Function percentage] should return &quot;-&quot; when the value is &quot;abc&quot;" name="Formats service [Function percentage] should return &quot;-&quot; when the value is &quot;abc&quot;" time="0.001">
    </testcase>
    <testcase classname="Formats service [Function price] should return &quot;1,234,567.89&quot; when the value is &quot;1234567.88889999&quot;" name="Formats service [Function price] should return &quot;1,234,567.89&quot; when the value is &quot;1234567.88889999&quot;" time="0">
    </testcase>
    <testcase classname="Formats service [Function price] should return &quot;-&quot; when the value is &quot;&quot;" name="Formats service [Function price] should return &quot;-&quot; when the value is &quot;&quot;" time="0">
    </testcase>
    <testcase classname="Formats service [Function price] should return &quot;-&quot; when the value is &quot;abc&quot;" name="Formats service [Function price] should return &quot;-&quot; when the value is &quot;abc&quot;" time="0">
    </testcase>
    <testcase classname="Formats service [Function decimal] should return &quot;1,234,567.9&quot; when the value is &quot;1234567.88889999&quot;" name="Formats service [Function decimal] should return &quot;1,234,567.9&quot; when the value is &quot;1234567.88889999&quot;" time="0.001">
    </testcase>
    <testcase classname="Formats service [Function decimal] should return &quot;-&quot; when the value is &quot;&quot;" name="Formats service [Function decimal] should return &quot;-&quot; when the value is &quot;&quot;" time="0">
    </testcase>
    <testcase classname="Formats service [Function decimal] should return &quot;-&quot; when the value is &quot;abc&quot;" name="Formats service [Function decimal] should return &quot;-&quot; when the value is &quot;abc&quot;" time="0">
    </testcase>
    <testcase classname="Formats service [Function integer] should return &quot;-&quot; when the value is &quot;&quot;" name="Formats service [Function integer] should return &quot;-&quot; when the value is &quot;&quot;" time="0">
    </testcase>
    <testcase classname="Formats service [Function integer] should return &quot;1,234,568&quot; when the value is &quot;1234567.88889999&quot;" name="Formats service [Function integer] should return &quot;1,234,568&quot; when the value is &quot;1234567.88889999&quot;" time="0">
    </testcase>
    <testcase classname="Formats service [Function integer] should return &quot;-&quot; when the value is &quot;abc&quot;" name="Formats service [Function integer] should return &quot;-&quot; when the value is &quot;abc&quot;" time="0.001">
    </testcase>
    <testcase classname="Formats service [Function sales] should return &quot;2&quot; when the value is &quot;1.92345678&quot;" name="Formats service [Function sales] should return &quot;2&quot; when the value is &quot;1.92345678&quot;" time="0">
    </testcase>
    <testcase classname="Formats service [Function sales] should return &quot;-&quot; when the value is &quot;&quot;" name="Formats service [Function sales] should return &quot;-&quot; when the value is &quot;&quot;" time="0">
    </testcase>
    <testcase classname="Formats service [Function sales] should return &quot;-&quot; when the value is &quot;abc&quot;" name="Formats service [Function sales] should return &quot;-&quot; when the value is &quot;abc&quot;" time="0">
    </testcase>
    <testcase classname="Formats service [Function currency] should return &quot;AED 1,234,567.89&quot; when the value is &quot;1234567.89&quot;" name="Formats service [Function currency] should return &quot;AED 1,234,567.89&quot; when the value is &quot;1234567.89&quot;" time="0.001">
    </testcase>
    <testcase classname="Formats service [Function currency] should return &quot;AED 0&quot; when the value is &quot;0&quot;" name="Formats service [Function currency] should return &quot;AED 0&quot; when the value is &quot;0&quot;" time="0">
    </testcase>
    <testcase classname="Formats service [Function currency] should return &quot;-&quot; when the value is &quot;&quot;" name="Formats service [Function currency] should return &quot;-&quot; when the value is &quot;&quot;" time="0">
    </testcase>
    <testcase classname="Formats service [Function currency] should return &quot;-&quot; when the value is &quot;abc&quot;" name="Formats service [Function currency] should return &quot;-&quot; when the value is &quot;abc&quot;" time="0">
    </testcase>
    <testcase classname="Formats service [Function currencyRound] should return &quot;AED 1,234,568&quot; when the value is &quot;1234567.89&quot;" name="Formats service [Function currencyRound] should return &quot;AED 1,234,568&quot; when the value is &quot;1234567.89&quot;" time="0">
    </testcase>
    <testcase classname="Formats service [Function currencyRound] should return &quot;AED 0&quot; when the value is &quot;0&quot;" name="Formats service [Function currencyRound] should return &quot;AED 0&quot; when the value is &quot;0&quot;" time="0">
    </testcase>
    <testcase classname="Formats service [Function currencyRound] should return &quot;-&quot; when the value is &quot;&quot;" name="Formats service [Function currencyRound] should return &quot;-&quot; when the value is &quot;&quot;" time="0">
    </testcase>
    <testcase classname="Formats service [Function currencyRound] should return &quot;-&quot; when the value is &quot;abc&quot;" name="Formats service [Function currencyRound] should return &quot;-&quot; when the value is &quot;abc&quot;" time="0">
    </testcase>
    <testcase classname="Formats service [Function currency] should return &quot;-AED 1,234,567.89&quot; when the value is &quot;-1234567.89&quot;" name="Formats service [Function currency] should return &quot;-AED 1,234,567.89&quot; when the value is &quot;-1234567.89&quot;" time="0.004">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: &quot;-AED 1,234,567.89&quot;
Received: &quot;(AED 1,234,567.89)&quot;
    at /Users/nergal/Development/maf/c4-promo-assortment/frontend/src/Services/Formats.test.ts:51:39
    at Object.&lt;anonymous&gt; (/Users/nergal/Development/maf/c4-promo-assortment/frontend/node_modules/jest-each/build/bind.js:76:13)
    at Object.asyncJestTest (/Users/nergal/Development/maf/c4-promo-assortment/frontend/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)
    at /Users/nergal/Development/maf/c4-promo-assortment/frontend/node_modules/jest-jasmine2/build/queueRunner.js:43:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (/Users/nergal/Development/maf/c4-promo-assortment/frontend/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
    at /Users/nergal/Development/maf/c4-promo-assortment/frontend/node_modules/jest-jasmine2/build/queueRunner.js:73:41
    at processTicksAndRejections (internal/process/task_queues.js:97:5)</failure>
    </testcase>
  </testsuite>
  <testsuite name="Performance Saga Test" errors="0" failures="0" skipped="2" timestamp="2020-04-15T15:29:44" time="1.68" tests="2">
    <testcase classname="Performance Saga Test handles getYears" name="Performance Saga Test handles getYears" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Performance Saga Test handles getMonths" name="Performance Saga Test handles getMonths" time="0">
      <skipped/>
    </testcase>
  </testsuite>
</testsuites>